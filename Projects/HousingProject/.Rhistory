<<<<<<< HEAD
from zlib import crc32
import os
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.model_selection import StratifiedShuffleSplit
reticulate::repl_python()
install.packages("tibble")
reticulate::repl_python()
install.packages("libcoin")
data(mtcars)
force(mtcars)
data()
?USArrests
data(iris)
force(iris)
library(ggplot2)
data("diamonds")
force(diamonds)
?occupationalStatus
?sleep
HairEyeColor
Nile
PlantGrowth
Titanic
UCBAdmissions
library(car)
data("Prestige")
force(Prestige)
data("Prestige")
data(iris)
data(iris)
force(iris)
iris_num <- transform(iris,
Species = as.numeric(Species))
new_names <- c(Sepal.Length = "seplen",
Sepal.Width = "sepwdth",
Petal.Length = "petlen",
Petal.Width = "petwdth",
Species = "species")
names(iris_num) <- new_names
iris_num <- transform(iris,
Species = as.numeric(Species))
new_names <- c(Sepal.Length = "seplen",
Sepal.Width = "sepwdth",
Petal.Length = "petlen",
Petal.Width = "petwdth",
Specie = "species")
names(iris_num) <- new_names
new_names <- list(Sepal.Length = "seplen",
Sepal.Width = "sepwdth",
Petal.Length = "petlen",
Petal.Width = "petwdth",
Species = "species")
names(iris_num) <- new_names
iris_num <- transform(iris,
Species = as.numeric(Species))
new_names <- list(Sepal.Length = "seplen",
Sepal.Width = "sepwdth",
Petal.Length = "petlen",
Petal.Width = "petwdth",
Species = "species")
names(iris_num) <- new_names
new_names <- c(Sepal.Length = "seplen",
Sepal.Width = "sepwdth",
Petal.Length = "petlen",
Petal.Width = "petwdth",
Species = "species")
new_names
names(new_names)
new_names <- c(Sepal.Length = "seplen",
Sepal.Width = "sepwdth",
Petal.Length = "petlen",
Petal.Width = "petwdth",
Species = "species")
?Mamapply(function, ...), ...)
?Map
Map
?recode
library(MplusAutomation)
install.packages(c("blavaan", "coin", "effectsize", "ggrepel", "hdrcde", "MCMCpack", "mosaic", "mosaicCore", "mosaicData", "withr"))
install.packages(c("brio", "IRdisplay", "mlr3", "plotrix", "repr", "tinytex"))
f <- function(x) {
sqrt(x + 3) - x + 1
}
x <- c(0, 1, sqrt(2), sqrt(2)-1)
f(x)
print(f(x), digits = 3)
print(f(x), digits = 4)
=======
((2 + (4 * 6)) * (3 + 5 + 7))
q()
n
<<<<<<< HEAD
reticulate::repl_python()
?D
dx2x <- deriv( ~ x^2, "x")
dx2x
mode(dx2x)
x <- -1:2
eval(dx2x)
plot(eval(dx2x ~ x))
plot(eval(dx2x) ~ x)
plot(eval(dx2x) ~ x, type = "l")
x <- seq(-1, 2, length.out = 1000)
eval(dx2x)
plot(eval(dx2x) ~ x, type = "l")
x <- seq(-5, 5, length.out = 1000)
eval(dx2x)
plot(eval(dx2x) ~ x, type = "l")
install.packages("ZillowR")
install.packages("DALEX")
=======
cpar::newR("prepare_housing_data.R")
cpar::newR("prepare_housing_data.R", subdir = "code/")
housing <- read.csv("data/housing/housing.csv", header = TRUE)
import sys
>>>>>>> 09bacffd1b0088cdcef68e9fc4b7f89808159efc
>>>>>>> 6a496edf61c59825fe05976b15b5b3545f4821bc
